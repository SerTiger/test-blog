/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./themes/default/assets/js/create_organization.js":
/*!*********************************************************!*\
  !*** ./themes/default/assets/js/create_organization.js ***!
  \*********************************************************/
/***/ (() => {

if (document.getElementById('organization')) {
  var uploadField = document.getElementById("file");
  var blah = document.getElementById("blah");

  uploadField.onchange = function () {
    if (this.files[0].size > 2097152) {
      alert("File is too big!");
      $('.file-row-container').removeClass('hide');
      $('.delete').fadeOut('fast');
      this.value = "";
    } else {
      $('.file-row-container').addClass('hide');
      $('.delete').fadeIn('fast');
      var file = this.files[0];

      if (file) {
        blah.src = URL.createObjectURL(file);
      }
    }
  };

  $('.delete').on('click', function () {
    uploadField.value = '';
    $('.file-row-container').removeClass('hide');
    $('.delete').fadeOut('fast');
  });
}

$('#organization').validate({
  ignore: [],
  errorElement: 'span',
  rules: {
    name: {
      required: true,
      minlength: 2,
      maxlength: 20
    },
    description: {
      required: true,
      minlength: 10,
      maxlength: 22
    },
    website: {
      required: true,
      minlength: 5,
      maxlength: 35
    },
    logo: {
      required: true
    },
    email: {
      required: true,
      email: true,
      minlength: 5,
      maxlength: 35
    },
    discord: {
      minlength: 5,
      maxlength: 50
    },
    telegram: {
      minlength: 5,
      maxlength: 50
    }
  }
});

/***/ }),

/***/ "./themes/default/assets/js/create_pool.js":
/*!*************************************************!*\
  !*** ./themes/default/assets/js/create_pool.js ***!
  \*************************************************/
/***/ (() => {

CKEDITOR.config.toolbar = 'custom';
CKEDITOR.config.toolbar_custom = [{
  name: 'document',
  groups: ['mode', 'document', 'doctools'],
  items: ['Source']
}, {
  name: 'clipboard',
  groups: ['clipboard', 'undo', 'basicstyles', 'cleanup'],
  items: ['Cut', 'Copy', 'Paste', 'PasteText', 'Undo', 'Redo', 'SelectAll', 'BulletedList', 'NumberedList', 'Bold', 'Italic', 'Underline', 'Strike', 'CopyFormatting', 'RemoveFormat', 'SelectAll', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', 'Link', 'Unlink', 'lineheight']
}];

function updateAllMessageForms() {
  for (instance in CKEDITOR.instances) {
    CKEDITOR.instances[instance].updateElement();
  }
}

var payload = {
  title: '',
  description: '',
  address: '',
  amount: null,
  currency: null,
  supported: null,
  rules: [],
  collect: [],
  show_total_cap: false,
  show_progress: false,
  image: null
};
$('#introduction').validate({
  ignore: [],
  errorElement: 'span',
  rules: {
    title: {
      required: true,
      minlength: 2,
      maxlength: 25
    }
  },
  submitHandler: function submitHandler(form, event) {
    updateAllMessageForms();
    event.preventDefault();
    payload.title = $('#title').val();
    payload.description = $('#description').val();
    $(form).fadeOut('fast');
    $('#funds').fadeIn('slow');
    $('.create-nav-item.active').removeClass('active').next().addClass('active');
    $("#supported").select2("destroy");
    $("#supported").select2();
  }
});
$('#funds').validate({
  ignore: [],
  errorElement: 'span',
  rules: {
    address: {
      required: true,
      minlength: 2,
      maxlength: 50
    },
    amount: {
      required: true
    },
    currency: {
      required: true
    },
    supported: {
      required: true
    }
  },
  submitHandler: function submitHandler(form, event) {
    event.preventDefault();
    payload.address = $('#address').val();
    payload.amount = $('#amount').val();
    payload.currency = $('#currency').val();
    payload.supported = $('#supported').val();
    console.log(payload);
    $(form).fadeOut('fast');
    $('#rules').fadeIn('slow');
    $('.create-nav-item.active').removeClass('active').next().addClass('active');
  }
});
$('#to_introduction').on('click', function () {
  $('#funds').fadeOut('fast');
  $('#introduction').fadeIn('slow');
  $('.create-nav-item.active').removeClass('active').prev().addClass('active');
});
$('#to_funds').on('click', function () {
  $('#rules').fadeOut('fast');
  $('#funds').fadeIn('slow');
  $('.create-nav-item.active').removeClass('active').prev().addClass('active');
});
$('#to_rules').on('click', function () {
  $('#settings').fadeOut('fast');
  $('#rules').fadeIn('slow');
  $('.create-nav-item.active').removeClass('active').prev().addClass('active');
});
$('.create-rule-container').validate({
  ignore: [],
  errorElement: 'span',
  rules: {
    group: {
      required: true
    },
    min_single: {
      required: true
    },
    max_single: {
      required: true
    },
    fee: {
      required: true
    },
    start_date: {
      required: true
    },
    end_date: {
      required: true
    }
  },
  submitHandler: function submitHandler(form, event) {
    event.preventDefault();
    var data = {
      group: $('#group').val(),
      min_single: $('#min_single').val(),
      max_single: $('#max_single').val(),
      amount_multiples: $('#amount_multiples').val(),
      contribute_counter: $('#contribute_counter').val(),
      fee: $('#fee').val(),
      start_date: $('#start_date').val(),
      end_date: $('#end_date').val()
    };
    var item = "<div class=\"create-body-tab-rules-item\">\n                                <div class=\"create-body-tab-rules-item-head\">\n                                    ".concat(data.group, "\n                                </div>\n                                <div class=\"create-body-tab-rules-item-body\">\n                                    <ul>\n                                        <li>\n                                            <p>min Amount</p>\n                                            <span>").concat(data.min_single, "</span>\n                                        </li>\n                                        <li>\n                                            <p>max Amount</p>\n                                            <span>").concat(data.max_single, "</span>\n                                        </li>\n                                        <li>\n                                            <p>VC Fee</p>\n                                            <span>").concat(data.fee, "%</span>\n                                        </li>\n                                        <li>\n                                            <p>Start Date</p>\n                                            <span>").concat(data.start_date, "</span>\n                                        </li>\n                                        <li>\n                                            <p>END Date</p>\n                                            <span>").concat(data.end_date, "</span>\n                                        </li>\n                                    </ul>\n                                    <h3>\u2022 Allowed in multiples of ").concat(data.amount_multiples, "%</h3>\n                                    <h3>\u2022 Only ").concat(data.contribute_counter, " transactions per user</h3>\n                                </div>\n                            </div>");
    $('.create-body-tab-rules').append(item);
    payload.rules.push(data);
    $('.create-rule').fadeOut('fast');
  }
});
$('#rules').validate({
  submitHandler: function submitHandler(form, event) {
    event.preventDefault();

    if (payload.rules.length) {
      $(form).fadeOut('fast');
      $('#settings').fadeIn('slow');
      $('.create-nav-item.active').removeClass('active').next().addClass('active');
    }
  }
});
$('#settings').validate({
  submitHandler: function submitHandler(form, event) {
    event.preventDefault();
    payload.collect = $('#collect').val();
    payload.show_total_cap = $('#total').val();
    payload.show_progress = $('#progress').val();
    $(form).fadeOut('fast');
    $('#img').fadeIn('slow');
    $('.create-nav-item.active').removeClass('active').next().addClass('active');
    $('#create_pool').prop('disabled', false);
  }
});

if (document.getElementById('img')) {
  var uploadField = document.getElementById("image");
  var blah = document.getElementById("blah");

  uploadField.onchange = function () {
    if (this.files[0].size > 2097152) {
      alert("File is too big!");
      $('.file-row-container').removeClass('hide');
      $('.delete').fadeOut('fast');
      payload.image = null;
      this.value = "";
    } else {
      $('.file-row-container').addClass('hide');
      $('.delete').fadeIn('fast');
      var file = this.files[0];

      if (file) {
        payload.image = file;
        blah.src = URL.createObjectURL(file);
      }
    }
  };

  $('.delete').on('click', function () {
    uploadField.value = '';
    payload.image = null;
    $('.file-row-container').removeClass('hide');
    $('.delete').fadeOut('fast');
  });
}

$(document).ready(function () {
  $('.selection').select2({
    minimumResultsForSearch: -1
  });
  $('#create_rule').on('click', function () {
    $('.create-rule').fadeIn('fast');
  });
  $('.create-rule-close').on('click', function () {
    $('.create-rule').fadeOut('fast');
  });
  $('#create_pool').on('click', function () {
    var formData = new FormData();
    formData.append('title', payload.title);
    formData.append('description', payload.description);
    formData.append('address', payload.address);
    formData.append('amount', payload.amount);
    formData.append('currency', payload.currency);
    formData.append('supported', payload.supported);
    formData.append('rules', payload.rules);
    formData.append('collect', payload.collect);
    formData.append('show_total_cap', payload.show_total_cap);
    formData.append('show_progress', payload.show_progress);
    formData.append('image', payload.image);
    $.ajax({
      type: 'POST',
      url: '/create_pool',
      cache: false,
      processData: false,
      data: formData
    }).done(function (response) {
      console.log(success);
    }).fail(function (error) {
      console.log(error);
    });
  });
});

/***/ }),

/***/ "./themes/default/assets/js/pool.js":
/*!******************************************!*\
  !*** ./themes/default/assets/js/pool.js ***!
  \******************************************/
/***/ (() => {

$('.pool-more-head').on('click', function () {
  $(this).next('.pool-more-body').slideToggle();
});

/***/ }),

/***/ "./themes/default/assets/js/profile.js":
/*!*********************************************!*\
  !*** ./themes/default/assets/js/profile.js ***!
  \*********************************************/
/***/ (() => {

if (document.getElementById('avatar')) {
  var uploadField = document.getElementById("avatar");
  var blah = document.getElementById("ava");

  uploadField.onchange = function () {
    if (this.files[0].size > 2097152) {
      alert("File is too big!");
      this.value = "";
    } else {
      var file = this.files[0];

      if (file) {
        blah.src = URL.createObjectURL(file);
      }
    }
  };
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*****************************************!*\
  !*** ./themes/default/assets/js/app.js ***!
  \*****************************************/
__webpack_require__(/*! ./create_organization.js */ "./themes/default/assets/js/create_organization.js");

__webpack_require__(/*! ./pool.js */ "./themes/default/assets/js/pool.js");

__webpack_require__(/*! ./create_pool.js */ "./themes/default/assets/js/create_pool.js");

__webpack_require__(/*! ./profile.js */ "./themes/default/assets/js/profile.js");

$(window).on("load", function () {
  setTimeout(function () {
    $('.loader').fadeOut('fast');
    $('.cubeWrap ').fadeOut('slow');
  }, 1000);
});
$(document).ready(function () {
  $('.await-notification-close').on('click', function () {
    $(this).parents('.await-notification').removeClass('active');
  });
  var root = document.querySelector(':root');

  if (localStorage.getItem('theme')) {
    var theme = localStorage.getItem('theme');

    if (theme !== 'light') {
      $('.theme-toggler').addClass('active');
      root.setAttribute('data-theme', 'dark');
    } else {
      $('.theme-toggler').removeClass('active');
      root.setAttribute('data-theme', 'light');
    }
  } else {
    localStorage.setItem('theme', 'light');
    root.setAttribute('data-theme', 'light');
  }

  $('.theme-toggler').on('click', function () {
    $(this).toggleClass('active');

    if ($(this).hasClass('active')) {
      localStorage.setItem('theme', 'dark');
      root.setAttribute('data-theme', 'dark');
    } else {
      localStorage.setItem('theme', 'light');
      root.setAttribute('data-theme', 'light');
    }
  });
});
$('[data-toggle="datepicker"]').datepicker({
  startView: 2
});
$('.header-wallet-wrap').on('click', function () {
  $('.header-wallet-dropdown').slideToggle();
});
$('.header-btns-wrap').on('click', function () {
  $('.header-btns-dropdown').slideToggle();
});
$('.burger').on('click', function () {
  $(this).toggleClass('active');
  $('body').toggleClass('fixed-body');
  $('.sidebar').toggleClass('active');
});
})();

/******/ })()
;